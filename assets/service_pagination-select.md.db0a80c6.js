import{o as n,c as s,d as a}from"./app.82ec9553.js";const p='{"title":"跨页选择器","description":"","frontmatter":{},"headers":[{"level":2,"title":"跨页选择","slug":"跨页选择"},{"level":2,"title":"查看已选择","slug":"查看已选择"},{"level":2,"title":"提供操作","slug":"提供操作"},{"level":3,"title":"全选","slug":"全选"},{"level":3,"title":"反选","slug":"反选"},{"level":3,"title":"页全选/反选","slug":"页全选-反选"}],"relativePath":"service/pagination-select.md","lastUpdated":1623229257294}',t={},e=a('<h1 id="跨页选择器"><a class="header-anchor" href="#跨页选择器" aria-hidden="true">#</a> 跨页选择器</h1><ul><li><a href="https://github.com/poyoho/shared/tree/master/packages/service/pagination-select" target="_blank" rel="noopener noreferrer">服务</a></li><li><a href="https://github.com/poyoho/shared/blob/master/playground/vue/src/views/pagination.vue" target="_blank" rel="noopener noreferrer">vue用例</a></li></ul><h2 id="跨页选择"><a class="header-anchor" href="#跨页选择" aria-hidden="true">#</a> 跨页选择</h2><p>初始化选择器，<code>selectCount</code>表示当页选中数量，<code>selectAll</code>表示是否跨页全选，<code>list/total</code>表示列表返回数据。维护的选中列表为一个<code>Set</code>，并且对展示列表中的每一个元素添加<code>$selected</code>标识标记该项目是否被选中。</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> selectRows <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>\n  selectCount<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  selectAll<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  list<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  total<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  pageSelectCount<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>当发生勾选变化时，将勾选内容合并到跨页选择器中。</p><p>在合并勾选的时候，只会发生三种情况【勾选一个、勾选所有、取消所有勾选】。在页面刷新的时候会上传一个空的selectRows，这个情况应该忽略，用<code>noRefreshed</code>标识是否第一次刷新。</p><blockquote><ul><li><code>SelectMergeRow</code> 第一个参数表示现在勾选项，仅当全选和反选有效。【全选、取消全选】</li><li><code>SelectMergeRow</code> 第二个参数点击勾选的一项，当此项存在会忽略第一个参数。【勾选一个】</li></ul></blockquote><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">SelectMergeRow</span> <span class="token punctuation">(</span>selectRows<span class="token operator">:</span> State<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> currentRow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">let</span> done <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>selectAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>currentRow<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 勾选一个</span>\n    done <span class="token operator">=</span> <span class="token boolean">true</span>\n    <span class="token keyword">const</span> idx <span class="token operator">=</span> selectRows<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>currentRow <span class="token keyword">as</span> SelectableRow<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      currentRow<span class="token punctuation">.</span>$selected <span class="token operator">=</span> <span class="token boolean">false</span>\n      selectRows<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span>\n      state<span class="token punctuation">.</span>pageSelectCount<span class="token operator">--</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      currentRow<span class="token punctuation">.</span>$selected <span class="token operator">=</span> <span class="token boolean">true</span>\n      selectRows<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>currentRow<span class="token punctuation">)</span>\n      state<span class="token punctuation">.</span>pageSelectCount<span class="token operator">++</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>selectRows<span class="token punctuation">.</span>length <span class="token operator">===</span> state<span class="token punctuation">.</span>list<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 勾选所有</span>\n      done <span class="token operator">=</span> <span class="token boolean">true</span>\n      state<span class="token punctuation">.</span>pageSelectCount <span class="token operator">=</span> state<span class="token punctuation">.</span>list<span class="token punctuation">.</span>length\n      state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>row <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        row<span class="token punctuation">.</span>$selected <span class="token operator">=</span> <span class="token boolean">true</span>\n        <span class="token keyword">const</span> idx <span class="token operator">=</span> selectRows<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          selectRows<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      state<span class="token punctuation">.</span>selectCount <span class="token operator">=</span> state<span class="token punctuation">.</span>list<span class="token punctuation">.</span>length\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>selectRows<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>noRefreshed<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 取消勾选</span>\n      done <span class="token operator">=</span> <span class="token boolean">true</span>\n      state<span class="token punctuation">.</span>pageSelectCount <span class="token operator">=</span> <span class="token number">0</span>\n      state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>row <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        row<span class="token punctuation">.</span>$selected <span class="token operator">=</span> <span class="token boolean">false</span>\n        <span class="token keyword">const</span> idx <span class="token operator">=</span> selectRows<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>idx <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          selectRows<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>noRefreshed <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>event<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>state<span class="token punctuation">,</span>\n      selectCount<span class="token operator">:</span> state<span class="token punctuation">.</span>selectAll <span class="token operator">?</span> state<span class="token punctuation">.</span>total <span class="token operator">:</span> selectRows<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>每次发生勾选变化都将变化合并到选择器中，外层调用者可以根据<code>state.list</code>下的元素展示勾选状态。</p><p>【情况1】使用组件提供的勾选方法更新勾选状态。</p><div class="language-ts line-numbers-mode"><pre><code>selectService<span class="token punctuation">.</span>event<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>state <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  selectState<span class="token punctuation">.</span>value <span class="token operator">=</span> state\n  <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    selectState<span class="token punctuation">.</span>value<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>row <span class="token operator">=&gt;</span> tableRef<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">toggleRowSelection</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> row<span class="token punctuation">.</span>$selected<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>【情况2】直接使用<code>服务</code>的<code>$selected</code>状态。</p><div class="language-ts line-numbers-mode"><pre><code>selectService<span class="token punctuation">.</span>event<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>state <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  selectState<span class="token punctuation">.</span>value <span class="token operator">=</span> state\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="查看已选择"><a class="header-anchor" href="#查看已选择" aria-hidden="true">#</a> 查看已选择</h2><p>更改请求数据方法，将勾选的数据按照列表数据格式输出给列表展示。</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token punctuation">{</span>\n  rows<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n  useLocal<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">localData</span> <span class="token punctuation">(</span>query<span class="token operator">:</span> QueryParams<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> startIndex <span class="token operator">=</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> query<span class="token punctuation">.</span>limit\n  <span class="token keyword">return</span>  <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    list<span class="token operator">:</span> cache<span class="token punctuation">.</span>rows<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> startIndex <span class="token operator">+</span> query<span class="token punctuation">.</span>limit<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    total<span class="token operator">:</span> cache<span class="token punctuation">.</span>rows<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>使用<code>requestData</code>方法，代理发请求。在切换到本地数据的时候发生勾选行为额外拷贝一份数据，防止在切换分页刷新的时候取消勾选一项就少显示一项。</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">requestData</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> QueryParams<span class="token punctuation">,</span> useLocal<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">.</span>useLocal <span class="token operator">!==</span> useLocal<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>useLocal <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>state<span class="token punctuation">.</span>selectAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      cache<span class="token punctuation">.</span>rows <span class="token operator">=</span> selectRows<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      cache<span class="token punctuation">.</span>rows <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n    cache<span class="token punctuation">.</span>useLocal <span class="token operator">=</span> useLocal\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>useLocal <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>state<span class="token punctuation">.</span>selectAll<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">localData</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">fetchData</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">useFetchDataKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        total<span class="token operator">:</span> res<span class="token punctuation">[</span>key<span class="token punctuation">.</span>total<span class="token punctuation">]</span><span class="token punctuation">,</span>\n        list<span class="token operator">:</span> res<span class="token punctuation">[</span>key<span class="token punctuation">.</span>list<span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="提供操作"><a class="header-anchor" href="#提供操作" aria-hidden="true">#</a> 提供操作</h2><p>对选项进行批量操作的时候不可以直接操作返回的<code>state</code>，在下次更新的时候服务的<code>state</code>会覆盖视图的<code>state</code>。在<code>模板</code>实现以下方法需同时调用<code>服务</code>的方法，使<code>服务</code>与<code>模板</code>数据同步。</p><p>服务内提供以下操作。</p><ul><li>全选 =&gt; <code>selectAll</code></li><li>反选 =&gt; <code>selectCancel</code></li><li>页全选 =&gt; <code>togglePageSelect(?true)</code></li><li>页反选 =&gt; <code>togglePageSelect(?false)</code></li></ul><h3 id="全选"><a class="header-anchor" href="#全选" aria-hidden="true">#</a> 全选</h3><p>清空所有保存的选中项，设置当前为全选，设置选中数量为列表总数。</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">selectAll</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  selectRows<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  state<span class="token punctuation">.</span>selectAll <span class="token operator">=</span> <span class="token boolean">true</span>\n  noRefreshed <span class="token operator">=</span> <span class="token boolean">false</span>\n  event<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token operator">...</span>state<span class="token punctuation">,</span>\n    list<span class="token operator">:</span> state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>ele <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>ele<span class="token punctuation">.</span>$selected <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> ele<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    selectCount<span class="token operator">:</span> state<span class="token punctuation">.</span>total<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="反选"><a class="header-anchor" href="#反选" aria-hidden="true">#</a> 反选</h3><p>清空所有保存的选中项，设置当前为反选。</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">selectCancel</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  selectRows<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  state<span class="token punctuation">.</span>selectAll <span class="token operator">=</span> <span class="token boolean">false</span>\n  noRefreshed <span class="token operator">=</span> <span class="token boolean">false</span>\n  state<span class="token punctuation">.</span>pageSelectCount <span class="token operator">=</span> <span class="token number">0</span>\n  event<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token operator">...</span>state<span class="token punctuation">,</span>\n    list<span class="token operator">:</span> state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>ele <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>ele<span class="token punctuation">.</span>$selected <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">||</span> ele<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    selectCount<span class="token operator">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="页全选-反选"><a class="header-anchor" href="#页全选-反选" aria-hidden="true">#</a> 页全选/反选</h3><p>页全选/反选，合并到页选择内容到选择器。</p><div class="language-ts line-numbers-mode"><pre><code><span class="token keyword">function</span> <span class="token function">togglePageSelect</span> <span class="token punctuation">(</span>check<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>noRefreshed <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>\n    <span class="token punctuation">(</span><span class="token keyword">typeof</span> check <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> check<span class="token punctuation">)</span> <span class="token operator">||</span>\n    <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pageSelectCount <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">.</span>length<span class="token punctuation">)</span>\n  <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SelectMergeRow</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">SelectMergeRow</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',32);t.render=function(a,p,t,o,c,l){return n(),s("div",null,[e])};export default t;export{p as __pageData};
